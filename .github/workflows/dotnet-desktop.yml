name: .NET Core Desktop

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Debug, Release]
    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: '.\DC bot.sln'                         # Replace with your solution name, i.e. MyWpfApp.sln.
      Test_Project_Path: '.\DC bot tests\DC bot tests.csproj'                 # Replace with the path to your test project, i.e. MyWpfApp.Tests\MyWpfApp.Tests.csproj.
      BOT_PREFIX: ${{ secrets.BOT_PREFIX }}
      DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
      LAVALINK_HOSTNAME: ${{ secrets.LAVALINK_HOSTNAME }}
      LAVALINK_PASSWORD: ${{ secrets.LAVALINK_PASSWORD }}
      LAVALINK_PORT: ${{ secrets.LAVALINK_PORT }}
      LAVALINK_SECURED: ${{ secrets.LAVALINK_SECURED }}
      
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    # Remove old build files
    - name: Clean project
      shell: bash
      run: rm -rf **/bin **/obj
      
    # Download the neccessary deps before build and test steps
    - name: Restore dependencies
      run: dotnet restore
      
    # Build the project
    - name: Build solution
      run: dotnet build --configuration ${{ matrix.configuration }} --no-restore
      
    # Execute all unit tests in the solution
    - name: Execute unit tests
      run: dotnet test --logger trx --results-directory "TestResults" --collect:"Code Coverage"
        
    # Upload test results   
    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: Test Results
        path: TestResults
